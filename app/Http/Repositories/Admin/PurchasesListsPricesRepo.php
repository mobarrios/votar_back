<?php
namespace App\Http\Repositories\Admin;


use App\Entities\Admin\PurchasesListsPrices;
use App\Entities\Admin\PurchasesListsPricesItems;
use App\Http\Repositories\BaseRepo;


class PurchasesListsPricesRepo extends BaseRepo {
    
    public function getModel()
    {
        return new PurchasesListsPrices();
    }

    public function create($data)
    {
        /* valida si el estado del request es true pone todos los otros valores en 0
        if($data->status){
            $status = $this->getModel()->where('status',1)->first();
            $status->status = 0;
            $status->save();
        }
        */

        $model = parent::create($data); // TODO: Change the autogenerated stub

        if(session()->has('items')){
            foreach (session('items') as $item)
            {
                $mlpi =  new PurchasesListsPricesItems();
                $mlpi->fill($item);

                $model->PruchasesListsPricesItems()->save($mlpi);
            }
        session()->forget('items');

        }

        return $model;
    }

    public function update($id, $data)
    {
        /* valida si el estado del request es true pone todos los otros valores en 0
        if($data->status){
            $status = $this->getModel()->where('status',1)->first();
            $status->status = 0;
            $status->save();
        }
           */

        $model = parent::update($id, $data); // TODO: Change the autogenerated stub

        if(session()->has('items')){
            foreach (session('items') as $item)
            {
                $model->PurchasesListsPricesItems()->sync(['price_list'=> $item['price_list'],'price_net' => $item['price_net'],'max_discount' => $item['max_discount'],'obs' => $item['obs'],'models_id' => $item['models_id']]);
            }

        }
    }

}